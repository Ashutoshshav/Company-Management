@model Digitization.Models.OtherExpenses

@{
    ViewData["Title"] = "OtherExpenseDetails";
}

@* <h1 class="mb-6 text-3xl font-bold">Payment Approval Dashboard</h1> *@

<div class="mx-auto max-w-7xl space-y-8">
    <!-- Section: Employee and Expense Details -->
    <div class="rounded-md bg-white p-6 shadow-lg">
        <div class="p-8">
            <h2 class="mb-6 border-b border-gray-200 pb-2 text-2xl font-semibold text-gray-800">
                <i class="fas fa-info-circle mr-2 text-blue-500"></i> Employee Expense Details
            </h2>
            <div class="grid-cols-1 grid gap-6 md:grid-cols-2">
                <!-- Dynamic Data from Model -->
                <div>
                    <label class="block text-sm font-medium text-gray-500">Project ID</label>
                    <p class="mt-2 text-lg font-semibold text-gray-700">@Model.ProjectID</p>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-500">Employee ID</label>
                    <p class="mt-2 text-lg font-semibold text-gray-700">@Model.EmployeeID</p>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-500">Expense Type</label>
                    <p class="mt-2 text-lg font-semibold text-gray-700">@Model.ExpenseType</p>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-500">Amount</label>
                    <p class="mt-2 text-lg font-bold text-green-600">₹ @Model.Amount</p>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-500">Remark</label>
                    <p class="mt-2 text-lg font-semibold text-gray-700">@(Model.Remark ?? "NULL")</p>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-500">Expense Date</label>
                    <p class="mt-2 text-lg font-semibold text-gray-700">@Model.ExpenseDate</p>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-500">Entry Date Time</label>
                    <p class="mt-2 text-lg font-semibold text-gray-700">@Model.EntryDTime</p>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-500">Description</label>
                    <p class="mt-2 text-lg font-semibold text-gray-700">@(Model.Description ?? "NULL")</p>
                </div>
            </div>
        </div>
    </div>

    @if(Model.ApprovalStatus != null)
    {
        <div class="p-8">
            @* <h2 class="mb-6 border-b border-gray-200 pb-2 text-2xl font-semibold text-gray-800">
                <i class="fas fa-info-circle mr-2 text-blue-500"></i> Employee Expense Details
            </h2> *@
            <div class="grid-cols-1 grid gap-6 md:grid-cols-2">
                <!-- Dynamic Data from Model -->
                <div>
                    <label class="block text-sm font-medium text-gray-500">Approval Status</label>
                    <p class="mt-2 text-lg font-semibold text-gray-700">@Model.ApprovalStatus</p>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-500">Approved By</label>
                    <p class="mt-2 text-lg font-semibold text-gray-700">@Model.ApprovedBy</p>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-500">Deduction Amount</label>
                    <p class="mt-2 text-lg font-semibold text-gray-700">@Model.DeductionAmount</p>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-500">Deduction Remark</label>
                    <p class="mt-2 text-lg font-semibold text-gray-700">@Model.DeductionRemark</p>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-500">Approval Date</label>
                    <p class="mt-2 text-lg font-semibold text-gray-700">@Model.ApprovalDate</p>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- Section: Approval Details -->
        <div class="rounded-lg bg-gray-50 shadow-lg">
            <div class="p-8">
                <h2 class="mb-6 border-b border-gray-200 pb-2 text-2xl font-semibold text-gray-800">
                    <i class="fas fa-check-circle mr-2 text-green-500"></i> Approval Actions
                </h2>
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="text-red-500">
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <p>@error.ErrorMessage</p>
                        }
                    </div>
                }
                <form asp-action="UpdateApproval" method="post" class="space-y-6">
                    <input type="hidden" name="RecordID" value="@Model.RecordID" />
                    <input type="hidden" name="ExpenseType" value=@Model.ExpenseType />
                    <div class="grid-cols-1 grid gap-6 md:grid-cols-2">
                        <!-- Approval Status -->
                        <div>
                            <label asp-for="ApprovalStatus" class="block text-sm font-medium text-gray-500">Approval Status</label>
                            <select id="ApprovalStatusDD" asp-for="ApprovalStatus" class="mt-1 block w-full rounded-md border-gray-300 bg-white p-3 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-200">
                                <option value="Approved">Approved</option>
                                <option value="Rejected">Rejected</option>
                            </select>
                        </div>
                        <!-- Deduction Amount (Hidden by Default) -->
                        <div id="DeductionAmount" class="hidden">
                            <label asp-for="DeductionAmount" class="block text-sm font-medium text-gray-500">Deduction Amount</label>
                            <input asp-for="DeductionAmount" type="number" value="@Model.DeductionAmount" class="mt-1 block w-full rounded-md border-gray-300 p-3 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-200" placeholder="Enter Deduction Amount" />
                        </div>
                        <!-- Deduction Remark -->
                        <div id="DeductionRemark" class="col-span-2 hidden">
                            <label asp-for="DeductionRemark" class="block text-sm font-medium text-gray-500">Deduction Remark</label>
                            <textarea asp-for="DeductionRemark" rows="3" class="mt-1 block w-full rounded-md border-gray-300 p-3 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-200" placeholder="Enter Deduction Remark">@Model.DeductionRemark</textarea>
                        </div>
                    </div>

                    <!-- Submit Button -->
                    <div class="text-right">
                        <button type="submit" class="rounded-md bg-green-600 px-6 py-3 text-white shadow-lg hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500">
                            <i class="fas fa-save mr-2"></i> Approve & Save
                        </button>
                    </div>
                </form>
            </div>
        </div>
    }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script>
    let ApprovalStatusDD = document.getElementById('ApprovalStatusDD');

    ApprovalStatusDD.addEventListener('change', (event) => {
        let value = ApprovalStatusDD.value;
        let DeductionAmount = document.getElementById('DeductionAmount');
        let DeductionRemark = document.getElementById('DeductionRemark');
        if (value == 'Rejected') {
            DeductionAmount.classList.remove('hidden');
            DeductionRemark.classList.remove('hidden');
        } else {
            DeductionAmount.classList.add('hidden');
            DeductionRemark.classList.add('hidden');
        }
    });
</script>
